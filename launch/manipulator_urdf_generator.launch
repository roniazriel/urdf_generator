<?xml version="1.0"?>
<launch>
  <arg name="paused" default="false" doc="Starts gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <arg name="world_name" default="worlds/empty.world"/>
  <arg name="man" default="manipulator" />
  <arg name="dof" default="6dof" />

  <!-- startup simulated world -->   
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--<arg name="world_name" value="$(find man_code)/worlds/vineyard.world"/> -->
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="use_sim_time" value="true"/>
  </include>

<!--<param name="robot_position" command="$(find some_package)/scripts/generate_random_position.py"/>
-->
 <param name="robot_description" command="$(find xacro)/xacro '$(find urdf_generator)/urdf/test.urdf.xacro'" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot " respawn="false"  />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher1" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find man_gazebo)/launch/controller_utils.launch"/>
  <rosparam file="$(find man_gazebo)/controller/arm_controller_$(arg dof).yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" />
<!-- -->
  <node pkg="rosservice" type="rosservice" name="set_logger_level" args="call --wait /gazebo/set_logger_level &quot; {logger: 'ros', level: 'Fatal'} &quot;" respawn="false" />
</launch>


